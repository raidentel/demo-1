

#pring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.url = jdbc:postgresql://localhost:5432/okjobs
#spring.datasource.username=postgres
#spring.datasource.password=root
# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
#spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop

# Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS


spring:
  application.name: lenomdelapp


spring.datasource:
  url: jdbc:postgresql://localhost:5432/okjobs
  username: postgres
  password: root
  driverClassName: org.postgresql.Driver
spring.jpa:
  database-platform=: org.hibernate.dialect.PostgreSQLDialect
  hibernate.ddl-auto: validate
  show-sql: true

logging.level.org.springframework.security: DEBUG
logging.level.com.example.demo: DEBUG





